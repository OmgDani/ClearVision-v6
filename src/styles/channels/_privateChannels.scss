@use "cv"as *;

/* PRIVATE CHANNELS */
#{cn(PrivateChannelsConnected privateChannels)} {
	background: transparent;

	#{cn("FluxContainer(PrivateChannelsList)" scroller)} {
		background: transparent;
		overflow-x: hidden;
	}

	// HEADER
	#{cn(PrivateChannelsConnected header)} {
		margin-top: 11px;
		display: flex;
		align-items: center;
		justify-content: center;
		color: $main-color;
		font-weight: 700;
		text-align: center;
		opacity: .85;

		&:before {
			content: "";
			height: 2px;
			flex-grow: 1;
			transition: all .3s ease-in-out;
			background: linear-gradient(to left, $main-color 50%, transparent);
			margin-right: 5px;
		}

		&:after {
			content: "";
			height: 2px;
			flex-grow: 1;
			transition: all .3s ease-in-out;
			background: linear-gradient(to right, $main-color 50%, transparent);
			margin-left: 5px;
		}
	}

	// PRIVATE CHANNEL
	#{cn(PrivateChannel channel)} {
		max-width: none;

		#{cn(PrivateChannel interactive)} {
			position: relative;
			z-index: 1;

			&:before {
				content: "";
				position: absolute;
				@include stretch;
				border-radius: 3px;
				transition: all .15s ease-in-out;
				z-index: -1;
				pointer-events: none;
			}

			&:after {
				content: "";
				position: absolute;
				@include pos(0, 100%, 0, 0);
				border-radius: 3px;
				opacity: .9;
				transition: all .3s ease-in-out;
				z-index: -1;
				pointer-events: none;
			}

			&#{cn(ListItem selected)} {

				&:focus-within,
				&:hover {
					color: #fff
				}
			}
		}

		#{cn(PrivateChannel closeButton)} {
			display: block;
			background: url(https://clearvision.gitlab.io/icons/close.svg) center/18px no-repeat;
			opacity: 0;
			transition: all .15s ease-in-out;

			path {
				display: none;
			}
		}

		#{cn(PrivateChannel linkButtonIcon)} {
			color: hsla(0, 0%, 100%, .3);
			transition: all .15s ease-in-out;
		}

		// HOVER
		&:hover {
			#{cn(ListItem layout)} {
				background: transparent;

				&:before {
					background: hsla(0, 0%, 100%, .1);
				}
			}

			#{cn(PrivateChannel closeButton)} {
				opacity: .3;

				&:hover {
					opacity: .7;
				}
			}

			#{cn(PrivateChannel linkButtonIcon)} {
				color: hsla(0, 0%, 100%, .7);
			}
		}

		// SELECTED
		#{cn(ListItem selected)} {
			// #{cn(ListItem layout)} {
			background: transparent;

			&:before {
				background: hsla(0, 0%, 100%, .1);
			}

			&:after {
				right: 0;
				background: $main-color;
				animation: cv-channel-select .3s ease-in-out;
			}

			// }
			#{cn(PrivateChannel linkButtonIcon)} {
				color: #fff;
			}
		}
	}
}

// PRIVATE CHANNELS SEARCH BAR
#{cn(PrivateChannelsConnected searchBar)} {
	background: rgba(0, 0, 0, calc(#{cv("bg.app.shading")} * .3));
	box-shadow: 0 2px 10px rgba(0, 0, 0, calc(#{cv("bg.app.shading")} * .3));

	#{cn(PrivateChannelsConnected searchBarComponent)} {
		background: hsla(0, 0%, 100%, .1);
		color: hsla(0, 0%, 100%, .3);
	}
}